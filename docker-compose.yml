services:
  priimeTechdb:
    image: postgres:latest
    container_name: priimeTech_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    ports:
      - "${PG_EXTERNAL_PORT}:${PG_LOCAL_PORT}"
    networks:
      - internal_network
    volumes:
      - postgres_data:/var/lib/postgres

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - internal_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # ðŸ”¹ MicrosserviÃ§o principal
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: api
    container_name: priimeTech_api
    restart: unless-stopped
    depends_on:
      - priimeTechdb
      - rabbitmq
    environment:
      PG_HOST: priimeTechdb
      PG_DATABASE: ${PG_DATABASE}
      PG_USERNAME: ${PG_USERNAME}
      PG_PASSWORD: ${PG_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "3000:3000"
    networks:
      - internal_network

  # ðŸ”¹ MicrosserviÃ§o de auditoria
  audit:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: audit-log
    container_name: priimeTech_audit
    restart: unless-stopped
    depends_on:
      - priimeTechdb
      - rabbitmq
    environment:
      PG_HOST: priimeTechdb
      PG_DATABASE: ${PG_DATABASE}
      PG_USERNAME: ${PG_USERNAME}
      PG_PASSWORD: ${PG_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "3001:3000"  # container usa 3000, mas mapeia externamente pra 3001
    networks:
      - internal_network

networks:
  internal_network:
    external: true
    driver: bridge
    name: internal_network

volumes:
  rabbitmq_data:
  postgres_data:
